{"version":3,"file":"411.bundle.js","mappings":"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","sources":["webpack://my_pra/./src/pages/recruitment/MyApplications.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Button,\r\n  Modal,\r\n  Spin,\r\n  Descriptions,\r\n  Space,\r\n  Typography,\r\n  message,\r\n} from \"antd\";\r\nimport request from \"../../utils/request\";\r\nimport { useLoginStore } from \"../../store/useLoginStore\";\r\n\r\nconst MyApplications: React.FC = () => {\r\n  const [applications, setApplications] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [detailVisible, setDetailVisible] = useState(false);\r\n  const [currentResume, setCurrentResume] = useState<any>(null);\r\n  const { userInfo, isLogin } = useLoginStore();\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      fetchApplications();\r\n    }\r\n  }, [isLogin]);\r\n\r\n  const fetchApplications = async () => {\r\n    if (!userInfo?.userId) {\r\n      message.error(\"用户信息不完整，无法获取申请记录\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await request.get(`/resumes`);\r\n      // 根据实际数据结构进行过滤，userId是一个包含_id字段的对象\r\n      const userResumes = (response.data.data || []).filter(\r\n        (resume: any) => resume.userId?._id === userInfo.userId\r\n      );\r\n      console.log(response.data.data);\r\n      setApplications(userResumes);\r\n    } catch (error) {\r\n      console.error(\"获取申请记录失败:\", error);\r\n      message.error(\"获取申请记录失败\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (resume: any) => {\r\n    setCurrentResume(resume);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  const handleViewDetails = (resume: any) => {\r\n    setCurrentResume(resume);\r\n    setDetailVisible(true);\r\n  };\r\n\r\n  // 添加一个辅助函数来获取正确的文件URL\r\n  const getFileUrl = (url: string) => {\r\n    // 如果URL已经是完整的URL，则直接返回\r\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\r\n      return url;\r\n    }\r\n\r\n    // 确保URL格式正确，应该是/api/files/而不是/api/uploads/files/\r\n    if (url.includes(\"/api/files/\")) {\r\n      return url.replace(\"/api/files/\", \"/api/files/\");\r\n    }\r\n\r\n    // 如果URL以/files开头，则添加/api前缀\r\n    if (url.startsWith(\"/files/\")) {\r\n      return `/api${url}`;\r\n    }\r\n\r\n    // 否则，确保URL以/api开头\r\n    if (!url.startsWith(\"/api\")) {\r\n      return `/api${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  // 添加一个函数来判断文件类型\r\n  const isPdfFile = (fileName: string) => {\r\n    return fileName && fileName.toLowerCase().endsWith(\".pdf\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"申请职位\",\r\n      dataIndex: \"jobId\",\r\n      key: \"position\",\r\n      render: (jobId: any) => jobId?.title || \"未知职位\",\r\n    },\r\n    {\r\n      title: \"申请时间\",\r\n      dataIndex: \"submittedAt\",\r\n      key: \"applyDate\",\r\n      render: (date: string) => new Date(date).toLocaleDateString(),\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: string) => {\r\n        const statusMap: Record<string, { text: string; color: string }> = {\r\n          pending: { text: \"待处理\", color: \"blue\" },\r\n          reviewed: { text: \"已审核\", color: \"orange\" },\r\n          hired: { text: \"已录用\", color: \"green\" },\r\n          rejected: { text: \"已拒绝\", color: \"red\" },\r\n        };\r\n\r\n        const { text, color } = statusMap[status] || {\r\n          text: status,\r\n          color: \"default\",\r\n        };\r\n        return <Tag color={color}>{text}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_: any, record: any) => (\r\n        <Space>\r\n          <Button type=\"link\" onClick={() => handlePreview(record)}>\r\n            预览简历\r\n          </Button>\r\n          <Button type=\"link\" onClick={() => handleViewDetails(record)}>\r\n            查看详情\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const renderEducation = (education: any) => {\r\n    if (!education) return \"暂无教育信息\";\r\n    return (\r\n      <Descriptions column={1} bordered size=\"small\">\r\n        <Descriptions.Item label=\"学校\">\r\n          {education.school || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"专业\">\r\n          {education.major || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"学位\">\r\n          {education.degree || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"毕业年份\">\r\n          {education.graduationYear || \"未填写\"}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    );\r\n  };\r\n\r\n  const renderExperience = (experiences: any[]) => {\r\n    if (!experiences || experiences.length === 0) return \"暂无工作经验\";\r\n\r\n    return experiences.map((exp, index) => (\r\n      <Descriptions\r\n        key={index}\r\n        column={1}\r\n        bordered\r\n        size=\"small\"\r\n        style={{ marginBottom: 16 }}\r\n      >\r\n        <Descriptions.Item label=\"公司\">\r\n          {exp.company || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"职位\">\r\n          {exp.position || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"时间段\">\r\n          {exp.duration || \"未填写\"}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"描述\">\r\n          {exp.description || \"未填写\"}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"24px\" }}>\r\n      <h2>我的申请记录</h2>\r\n      {applications.length === 0 && !loading ? (\r\n        <Typography.Text type=\"secondary\">您还没有提交过申请</Typography.Text>\r\n      ) : (\r\n        <Spin spinning={loading}>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={applications}\r\n            rowKey=\"_id\"\r\n            pagination={{ pageSize: 10 }}\r\n          />\r\n        </Spin>\r\n      )}\r\n\r\n      {/* 简历预览模态框 */}\r\n      <Modal\r\n        title=\"简历预览\"\r\n        open={previewVisible}\r\n        onCancel={() => setPreviewVisible(false)}\r\n        footer={null}\r\n        width={800}\r\n        styles={{ body: { height: \"80vh\" } }}\r\n      >\r\n        {currentResume &&\r\n          currentResume.fileUrl &&\r\n          (isPdfFile(currentResume.fileName) ? (\r\n            <object\r\n              data={getFileUrl(currentResume.fileUrl)}\r\n              type=\"application/pdf\"\r\n              style={{ width: \"100%\", height: \"70vh\" }}\r\n            >\r\n              <p>\r\n                您的浏览器无法直接预览PDF文件。\r\n                <a\r\n                  href={getFileUrl(currentResume.fileUrl)}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  点击下载\r\n                </a>\r\n              </p>\r\n            </object>\r\n          ) : (\r\n            <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n              <p>此文件类型不支持直接预览</p>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => window.open(getFileUrl(currentResume.fileUrl))}\r\n              >\r\n                下载文件\r\n              </Button>\r\n            </div>\r\n          ))}\r\n      </Modal>\r\n\r\n      {/* 简历详情模态框 */}\r\n      <Modal\r\n        title=\"申请详情\"\r\n        open={detailVisible}\r\n        onCancel={() => setDetailVisible(false)}\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        {currentResume && (\r\n          <div>\r\n            <Descriptions bordered column={1} style={{ marginBottom: 20 }}>\r\n              <Descriptions.Item label=\"申请职位\">\r\n                {currentResume.jobId?.title || \"未知职位\"}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"申请时间\">\r\n                {new Date(currentResume.submittedAt).toLocaleString()}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"状态\">\r\n                {(() => {\r\n                  const statusMap: Record<\r\n                    string,\r\n                    { text: string; color: string }\r\n                  > = {\r\n                    pending: { text: \"待处理\", color: \"blue\" },\r\n                    reviewed: { text: \"已审核\", color: \"orange\" },\r\n                    hired: { text: \"已录用\", color: \"green\" },\r\n                    rejected: { text: \"已拒绝\", color: \"red\" },\r\n                  };\r\n\r\n                  const { text, color } = statusMap[currentResume.status] || {\r\n                    text: currentResume.status,\r\n                    color: \"default\",\r\n                  };\r\n                  return <Tag color={color}>{text}</Tag>;\r\n                })()}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"简历文件\">\r\n                <Space>\r\n                  <Typography.Text>{currentResume.fileName}</Typography.Text>\r\n                  <Button\r\n                    type=\"link\"\r\n                    onClick={() =>\r\n                      window.open(getFileUrl(currentResume.fileUrl))\r\n                    }\r\n                  >\r\n                    下载\r\n                  </Button>\r\n                </Space>\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <Typography.Title level={5}>教育背景</Typography.Title>\r\n            {renderEducation(currentResume.education)}\r\n\r\n            <Typography.Title level={5} style={{ marginTop: 20 }}>\r\n              工作经验\r\n            </Typography.Title>\r\n            {renderExperience(currentResume.workExperience)}\r\n\r\n            <Typography.Title level={5} style={{ marginTop: 20 }}>\r\n              技能\r\n            </Typography.Title>\r\n            {currentResume.skills && currentResume.skills.length > 0 ? (\r\n              <div>\r\n                {currentResume.skills.map((skill: string, index: number) => (\r\n                  <Tag key={index} style={{ margin: \"5px\" }}>\r\n                    {skill}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              \"暂无技能信息\"\r\n            )}\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApplications;\r\n"],"names":["MyApplications","applications","setApplications","useState","loading","setLoading","previewVisible","setPreviewVisible","detailVisible","setDetailVisible","currentResume","setCurrentResume","userInfo","isLogin","useLoginStore","useEffect","fetchApplications","async","userId","response","request","get","userResumes","data","filter","resume","_id","console","log","error","message","getFileUrl","url","startsWith","includes","replace","columns","title","dataIndex","key","render","jobId","date","Date","toLocaleDateString","status","text","color","pending","reviewed","hired","rejected","React","Tag","_","record","Space","Button","type","onClick","style","padding","length","Spin","spinning","Table","dataSource","rowKey","pagination","pageSize","Typography","Text","Modal","open","onCancel","footer","width","styles","body","height","fileUrl","fileName","toLowerCase","endsWith","href","target","rel","textAlign","window","Descriptions","bordered","column","marginBottom","Item","label","submittedAt","toLocaleString","Title","level","education","size","school","major","degree","graduationYear","marginTop","experiences","workExperience","map","exp","index","company","position","duration","description","skills","skill","margin"],"sourceRoot":""}