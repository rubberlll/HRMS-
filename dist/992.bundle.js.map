{"version":3,"file":"992.bundle.js","mappings":"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","sources":["webpack://my_pra/./src/pages/Resume.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Card,\r\n  Modal,\r\n  Typography,\r\n  Descriptions,\r\n  Tag,\r\n  Button,\r\n  Space,\r\n  message,\r\n} from \"antd\";\r\nimport type { ColumnsType } from \"antd/es/table\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\r\nimport request from \"../utils/request\";\r\n\r\nconst { Title } = Typography;\r\n\r\n// 设置 PDF.js worker 路径\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\ninterface ResumeType {\r\n  id: string;\r\n  name: string;\r\n  position: string;\r\n  email: string;\r\n  phone: string;\r\n  status: \"pending\" | \"reviewed\" | \"hired\" | \"rejected\";\r\n  submitTime: string;\r\n  fileUrl: string;\r\n  fileName: string;\r\n  education?: {\r\n    school: string;\r\n    major: string;\r\n    degree: string;\r\n    graduationYear: string;\r\n  };\r\n  workExperience?: {\r\n    company: string;\r\n    position: string;\r\n    duration: string;\r\n    description: string;\r\n  }[];\r\n  skills?: string[];\r\n  jobId?: string;\r\n  userId: string;\r\n  interviewProcess?: {\r\n    currentStage: \"初筛\" | \"技术面试\" | \"HR面试\" | \"终面\" | \"offer谈判\";\r\n    interviewDate?: string;\r\n    interviewer?: string;\r\n    feedback?: string;\r\n  };\r\n  employmentInfo?: {\r\n    employmentDate?: string;\r\n    department?: string;\r\n    position?: string;\r\n    salary?: string;\r\n    probationPeriod?: string;\r\n    contractPeriod?: string;\r\n  };\r\n}\r\n\r\nconst Resume = () => {\r\n  const [selectedResume, setSelectedResume] = useState<ResumeType | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [numPages, setNumPages] = useState<number>(0);\r\n  const [pageNumber, setPageNumber] = useState<number>(1);\r\n  const [isPdfModalOpen, setIsPdfModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [resumes, setResumes] = useState<ResumeType[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchResumes();\r\n  }, []);\r\n\r\n  const fetchResumes = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await request.get(\"/resumes\");\r\n      if (response.data.code === 200) {\r\n        // 转换后端数据格式为前端格式\r\n        const formattedResumes = response.data.data.map((resume: any) => ({\r\n          id: resume._id,\r\n          name: resume.userId?.username || \"未知\",\r\n          position: resume.jobId?.title || \"未知职位\",\r\n          email: resume.userId?.email || \"\",\r\n          phone: resume.userId?.phone || \"\",\r\n          status: resume.status,\r\n          submitTime: new Date(resume.submittedAt).toLocaleString(),\r\n          fileUrl: resume.fileUrl,\r\n          fileName: resume.fileName,\r\n          education: resume.education,\r\n          workExperience: resume.workExperience,\r\n          skills: resume.skills,\r\n          jobId: resume.jobId?._id,\r\n          userId: resume.userId?._id,\r\n          interviewProcess: resume.interviewProcess,\r\n          employmentInfo: resume.employmentInfo,\r\n        }));\r\n        setResumes(formattedResumes);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"获取简历列表失败:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 添加更新简历状态的函数\r\n  const updateResumeStatus = async (id: string, status: string) => {\r\n    try {\r\n      const response = await request.put(`/resumes/${id}`, { status });\r\n      if (response.data.code === 200) {\r\n        message.success(\"更新状态成功\");\r\n\r\n        // 如果状态是\"hired\"（已录用），则更新用户角色为\"employee\"\r\n        if (status === \"hired\" && selectedResume) {\r\n          try {\r\n            const userResponse = await request.put(\r\n              `/users/${selectedResume.userId}`,\r\n              {\r\n                role: \"employee\",\r\n                status: \"active\",\r\n              }\r\n            );\r\n            if (userResponse.data.code === 200) {\r\n              message.success(\"已将用户角色更新为员工\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"更新用户角色失败:\", error);\r\n            message.error(\"更新用户角色失败\");\r\n          }\r\n        }\r\n\r\n        fetchResumes(); // 刷新列表\r\n      }\r\n    } catch (error) {\r\n      console.error(\"更新简历状态失败:\", error);\r\n    }\r\n  };\r\n\r\n  // 检查用户是否已被录用\r\n  const checkUserHired = async (userId: string) => {\r\n    try {\r\n      const response = await request.get(`/resumes/user/${userId}`);\r\n      if (response.data.code === 200) {\r\n        // 检查该用户是否有已录用的简历\r\n        const hasHired = response.data.data.some(\r\n          (resume: any) => resume.status === \"hired\"\r\n        );\r\n        return hasHired;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"检查用户录用状态失败:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // 状态映射\r\n  const getStatusText = (status: string) => {\r\n    const statusMap: Record<string, string> = {\r\n      pending: \"待处理\",\r\n      reviewed: \"已审核\",\r\n      hired: \"已录用\",\r\n      rejected: \"已拒绝\",\r\n    };\r\n    return statusMap[status] || status;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colorMap: Record<string, string> = {\r\n      pending: \"gold\",\r\n      reviewed: \"blue\",\r\n      hired: \"green\",\r\n      rejected: \"red\",\r\n    };\r\n    return colorMap[status] || \"default\";\r\n  };\r\n\r\n  const columns: ColumnsType<ResumeType> = [\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"应聘职位\",\r\n      dataIndex: \"position\",\r\n      key: \"position\",\r\n    },\r\n    {\r\n      title: \"投递时间\",\r\n      dataIndex: \"submitTime\",\r\n      key: \"submitTime\",\r\n      sorter: (a, b) =>\r\n        new Date(a.submitTime).getTime() - new Date(b.submitTime).getTime(),\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: string) => {\r\n        return (\r\n          <Tag color={getStatusColor(status)}>{getStatusText(status)}</Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setSelectedResume(record);\r\n              setIsModalOpen(true);\r\n            }}\r\n          >\r\n            查看详情\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setSelectedResume(record);\r\n              setIsPdfModalOpen(true);\r\n            }}\r\n          >\r\n            查看简历附件\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 获取文件URL\r\n  const getFileUrl = (url: string) => {\r\n    // 如果URL已经是完整的URL，则直接返回\r\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\r\n      return url;\r\n    }\r\n\r\n    // 确保URL格式正确，应该是/api/files/而不是/api/uploads/files/\r\n    if (url.includes(\"/api/files/\")) {\r\n      return url.replace(\"/api/files/\", \"/api/files/\");\r\n    }\r\n\r\n    // 如果URL以/files开头，则添加/api前缀\r\n    if (url.startsWith(\"/files/\")) {\r\n      return `/api${url}`;\r\n    }\r\n\r\n    // 否则，确保URL以/api开头\r\n    if (!url.startsWith(\"/api\")) {\r\n      return `/api${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  // 添加一个函数来判断文件类型\r\n  const isPdfFile = (fileName: string) => {\r\n    return fileName && fileName.toLowerCase().endsWith(\".pdf\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <Card>\r\n        <Title level={3}>简历管理</Title>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={resumes}\r\n          rowKey=\"id\"\r\n          loading={loading}\r\n          pagination={{\r\n            pageSize: 10,\r\n            showTotal: (total) => `共 ${total} 条记录`,\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <Modal\r\n        title=\"简历详情\"\r\n        open={isModalOpen}\r\n        onCancel={() => setIsModalOpen(false)}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"back\" onClick={() => setIsModalOpen(false)}>\r\n            关闭\r\n          </Button>,\r\n          <Button\r\n            key=\"updateStatus\"\r\n            onClick={() => {\r\n              if (selectedResume) {\r\n                // 打开一个状态选择的模态框或下拉菜单\r\n                // 这里简化为直接更新为\"reviewed\"状态\r\n                updateResumeStatus(selectedResume.id, \"reviewed\");\r\n                setIsModalOpen(false);\r\n              }\r\n            }}\r\n          >\r\n            标记为已审核\r\n          </Button>,\r\n          <Button\r\n            key=\"reject\"\r\n            danger\r\n            onClick={() => {\r\n              if (selectedResume) {\r\n                updateResumeStatus(selectedResume.id, \"rejected\");\r\n                setIsModalOpen(false);\r\n              }\r\n            }}\r\n          >\r\n            拒绝\r\n          </Button>,\r\n          <Button\r\n            key=\"hire\"\r\n            type=\"primary\"\r\n            onClick={async () => {\r\n              if (selectedResume) {\r\n                // 检查该用户是否已被录用\r\n                const isHired = await checkUserHired(selectedResume.userId);\r\n                if (isHired) {\r\n                  message.warning(\"该用户已有被录用的简历，无法重复录用\");\r\n                  return;\r\n                }\r\n\r\n                updateResumeStatus(selectedResume.id, \"hired\");\r\n                setIsModalOpen(false);\r\n                // 这里可以添加录用信息填写的逻辑\r\n              }\r\n            }}\r\n          >\r\n            录用\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {selectedResume && (\r\n          <Descriptions column={2} bordered>\r\n            <Descriptions.Item label=\"姓名\" span={2}>\r\n              {selectedResume.name}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"应聘职位\" span={2}>\r\n              {selectedResume.position}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"邮箱\">\r\n              {selectedResume.email}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"电话\">\r\n              {selectedResume.phone}\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"教育背景\" span={2}>\r\n              {selectedResume.education?.school} -{\" \"}\r\n              {selectedResume.education?.major}\r\n              <br />\r\n              {selectedResume.education?.degree} ·{\" \"}\r\n              {selectedResume.education?.graduationYear}年毕业\r\n            </Descriptions.Item>\r\n\r\n            <Descriptions.Item label=\"工作经历\" span={2}>\r\n              {selectedResume.workExperience?.map((exp, index) => (\r\n                <div key={index} style={{ marginBottom: 16 }}>\r\n                  <strong>{exp.company}</strong> - {exp.position}\r\n                  <br />\r\n                  {exp.duration}\r\n                  <br />\r\n                  {exp.description}\r\n                </div>\r\n              ))}\r\n            </Descriptions.Item>\r\n\r\n            {selectedResume.interviewProcess && (\r\n              <Descriptions.Item label=\"面试进度\" span={2}>\r\n                <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n                  <div>\r\n                    当前阶段：{selectedResume.interviewProcess.currentStage}\r\n                  </div>\r\n                  {selectedResume.interviewProcess.interviewDate && (\r\n                    <div>\r\n                      面试时间：{selectedResume.interviewProcess.interviewDate}\r\n                    </div>\r\n                  )}\r\n                  {selectedResume.interviewProcess.interviewer && (\r\n                    <div>\r\n                      面试官：{selectedResume.interviewProcess.interviewer}\r\n                    </div>\r\n                  )}\r\n                  {selectedResume.interviewProcess.feedback && (\r\n                    <div>\r\n                      面试反馈：{selectedResume.interviewProcess.feedback}\r\n                    </div>\r\n                  )}\r\n                </Space>\r\n              </Descriptions.Item>\r\n            )}\r\n\r\n            {selectedResume.employmentInfo && (\r\n              <Descriptions.Item label=\"录用信息\" span={2}>\r\n                <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n                  {selectedResume.employmentInfo.employmentDate && (\r\n                    <div>\r\n                      入职日期：{selectedResume.employmentInfo.employmentDate}\r\n                    </div>\r\n                  )}\r\n                  {selectedResume.employmentInfo.department && (\r\n                    <div>\r\n                      入职部门：{selectedResume.employmentInfo.department}\r\n                    </div>\r\n                  )}\r\n                  {selectedResume.employmentInfo.position && (\r\n                    <div>职位：{selectedResume.employmentInfo.position}</div>\r\n                  )}\r\n                  {selectedResume.employmentInfo.salary && (\r\n                    <div>薪资：{selectedResume.employmentInfo.salary}</div>\r\n                  )}\r\n                  {selectedResume.employmentInfo.probationPeriod && (\r\n                    <div>\r\n                      试用期：{selectedResume.employmentInfo.probationPeriod}\r\n                    </div>\r\n                  )}\r\n                  {selectedResume.employmentInfo.contractPeriod && (\r\n                    <div>\r\n                      合同期限：{selectedResume.employmentInfo.contractPeriod}\r\n                    </div>\r\n                  )}\r\n                </Space>\r\n              </Descriptions.Item>\r\n            )}\r\n          </Descriptions>\r\n        )}\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"简历附件\"\r\n        open={isPdfModalOpen}\r\n        onCancel={() => setIsPdfModalOpen(false)}\r\n        width={1000}\r\n        footer={[\r\n          <Button key=\"close\" onClick={() => setIsPdfModalOpen(false)}>\r\n            关闭\r\n          </Button>,\r\n          <Button\r\n            key=\"download\"\r\n            type=\"primary\"\r\n            onClick={() =>\r\n              selectedResume && window.open(getFileUrl(selectedResume.fileUrl))\r\n            }\r\n          >\r\n            下载\r\n          </Button>,\r\n        ]}\r\n        styles={{ body: { height: \"80vh\" } }}\r\n      >\r\n        {selectedResume && (\r\n          <div style={{ height: \"100%\", width: \"100%\" }}>\r\n            <Typography.Text\r\n              strong\r\n              style={{ display: \"block\", marginBottom: 10 }}\r\n            >\r\n              文件名：{selectedResume.fileName}\r\n            </Typography.Text>\r\n            <iframe\r\n              src={getFileUrl(selectedResume.fileUrl)}\r\n              style={{ width: \"100%\", height: \"70vh\", border: \"none\" }}\r\n              title=\"简历预览\"\r\n            >\r\n              <p>\r\n                您的浏览器不支持iframe。\r\n                <a\r\n                  href={getFileUrl(selectedResume.fileUrl)}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  点击下载\r\n                </a>\r\n              </p>\r\n            </iframe>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n"],"names":["Title","Typography","pdfjs","workerSrc","Resume","selectedResume","setSelectedResume","useState","isModalOpen","setIsModalOpen","numPages","setNumPages","pageNumber","setPageNumber","isPdfModalOpen","setIsPdfModalOpen","loading","setLoading","resumes","setResumes","useEffect","fetchResumes","async","response","request","get","data","code","formattedResumes","map","resume","id","_id","name","userId","username","position","jobId","title","email","phone","status","submitTime","Date","submittedAt","toLocaleString","fileUrl","fileName","education","workExperience","skills","interviewProcess","employmentInfo","error","console","updateResumeStatus","put","message","success","role","getStatusColor","pending","reviewed","hired","rejected","columns","dataIndex","key","sorter","a","b","getTime","render","React","Tag","color","getStatusText","_","record","Space","Button","type","onClick","getFileUrl","url","startsWith","includes","replace","style","padding","Card","level","Table","dataSource","rowKey","pagination","pageSize","showTotal","total","Modal","open","onCancel","width","footer","danger","some","checkUserHired","warning","Descriptions","column","bordered","Item","label","span","school","major","degree","graduationYear","exp","index","marginBottom","company","duration","description","direction","currentStage","interviewDate","interviewer","feedback","employmentDate","department","salary","probationPeriod","contractPeriod","window","styles","body","height","Text","strong","display","src","border","href","target","rel"],"sourceRoot":""}